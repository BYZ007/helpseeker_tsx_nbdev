# AUTOGENERATED! DO NOT EDIT! File to edit: TSX_preprocessing.ipynb (unless otherwise specified).

__all__ = ['create_tsx_features']

# Comes from TSXCore.ipynb, cell
import pandas as pd
import numpy as np
import warnings

warnings.filterwarnings("ignore")

def _get_tsx_features(data):
    tsx_features = np.array([(c if ('TSX' in c) else None) for c in data.columns.tolist()])
    tsx_features = tsx_features[tsx_features!=None].tolist()
    return tsx_features


def _get_tsx_year(t,df):
    cols = _tsx_cols_by_type(t,df)
    df[f"{t}_TSX_Investment_Previous_Year"]=df[cols].sum(axis = 1)
    df.drop(columns = cols,inplace = True)
    return df


def _tsx_cols_by_type(t,df,summary_stats = False):
    cols = np.array([(c if (t in c) else None)  for c in df.columns])
    cols = cols[cols!=None].tolist()
    if not summary_stats:
        cols = list(set(cols)-set([f'TSX_{type}_Price_MedianofMedian_Investing',
                                   f'TSX_{type}_Price_Max_Investing',
                                   f'TSX_{type}_Price_Min_Investing']))
    return cols


def create_tsx_features(tsx_features_dir):
    df = pd.read_csv(tsx_features_dir)
    tsx_features = _get_tsx_features(df)
    tsx_types = list(set([t.split('_')[1] for t in tsx_features]))

    for t in tsx_types:
        df = _get_tsx_year(t,df)

    return df